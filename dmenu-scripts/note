#!/bin/bash

###############################################################################
# TITLE: note
# AUTHOR: drfailer
# DATE: Sun Dec 12 11:11:54 AM CET 2021
# DESCRIPTION: Simple note taking system using dmenu
# REQUIREMENTS: dmenu, pandoc
###############################################################################

###############################################################################
# Global variables:
###############################################################################
# Global variable for the note directory
NOTE_DIR="$HOME/.local/share/notes"

# Global variable for tag and file (not const):
tag=""
file=""

###############################################################################
# Help message:
###############################################################################
displayHelpMessage() {
cat << ENDOFMESSAGE
Usage: note <option>

Available options:
  -e, --edit    launch the app in edit mode
  -r, --read    launch the app in read mode
  -h, --help    display help message

Note:
  If the app is launched without any option, it automatically startup in read
  mode.
ENDOFMESSAGE
}

###############################################################################
# Utilis functions:
###############################################################################

readTag() {
  tag=$(ls $1 | dmenu -l 20 -p "Chose a Tag: ")
}

readTopic() {
  file=$(ls $1 | sed -e 's/.pdf//g' | dmenu -l 20 -p "Chose a Topic: ")
}

warningMessage() {
  resp=$(printf "no\nyes\n" | dmenu -p 'confirme deletion: ')
  if [[ $resp =~ yes ]]; then
    if [[ $1 =~ \.md ]]; then
      rm $1
      rm $(echo "$1" | sed -e 's/src/build/g' | sed -e 's/\.md/\.pdf/g')
    else
      rm -rf $1
      rm -rf $(echo "$1" | sed -e 's/src/build/g')
      rm -rf $(echo "$1" | sed -e 's/src/img/g')
    fi
  fi
}

# Tag selection (directory):
choseTag() {
  tag=$(printf "$(ls $1)\nremove-mode\n" | dmenu -l 20 -p "Select a Tag: ")
  path="$1/$tag"
  if [[ $tag != '' && $tag != "remove-mode" ]]; then
    # create directory in build:
    buildpath=$(echo $path | sed -e 's/src/build/g')
    if [[ ! -d $buildpath ]]; then
      mkdir -p $buildpath
    fi
    # create directory in img:
    imgpath=$(echo $path | sed -e 's/src/img/g')
    if [[ ! -d $imgpath ]]; then
      mkdir -p $imgpath
    fi
    # create directory in src:
    if [[ ! -d $path ]]; then
      mkdir -p $path
    fi
  elif [[ $tag == "remove-mode" ]]; then
    toremove=$(ls $1 | dmenu -l 20 -p "! remove-mode: ")
    if [[ $toremove != '' ]]; then
      warningMessage "$1/$toremove"
    fi
  fi
}


# Topic selection (markdown file):
choseTopic() {
  topic=$(printf "$(ls $1)\nremove-mode\n" | sed -e 's/\.md//g' | dmenu -l 20 -p "Select a Topic: ")
  if [[ $topic != '' && $topic != "remove-mode" ]]; then
    file="$1/$topic.md"
    if [[ ! -f $file ]]; then
      touch $file
cat << EOF > $file
---
title: $(echo "$topic" | sed -e 's/.*/\u&/g' | sed -e 's/_/ /g')
author: $USER
tag: [$tag]
---
EOF
    fi
  elif [[ $topic == "remove-mode" ]]; then
    toremove=$(ls $1 | dmenu -l 20 -p "! remove-mode: ")
    if [[ $toremove != '' ]]; then
      warningMessage "$1/$toremove"
    fi
  fi
}

# use pandoc to create a pdf
compile() {
  pandoc -V geometry:margin=1in -o "$(echo $1 | sed -e 's/.md/.pdf/g' | sed -e 's/src/build/g')" $1 2> /dev/null
}

# Function that handle edit mode (the app has been lauched using -e flag)
editNote() {
  choseTag  "$NOTE_DIR/src"
  if [[ $tag != "" && $tag != "remove-mode" ]]; then
    choseTopic  "$HOME/.local/share/notes/src/$tag"
  fi
  if [[ $file != "" && $file != "remove-mode" ]]; then
    alacritty -e nvim -c % "$file" && compile "$file"
  fi
}

# Function that handle read mode (the app has been lauched using -r flag)
readNote() {
  readTag "$NOTE_DIR/build"
  if [[ $tag != "" ]]; then
    readTopic "$NOTE_DIR/build/$tag"
  fi
  if [[ $file != "" ]]; then
    zathura "$NOTE_DIR/build/$tag/$file.pdf"
  fi
}


###############################################################################
# Main function
###############################################################################

main() {
  if [ $# -eq 0 ]
  then
    readNote
  else
    case $1 in
      -e)
        editNote
        ;;
      -r)
        readNote
        ;;
      -h | --help)
        displayHelpMessage
        ;;
      *)
        echo "Unkown option, try to use --help flag for more info."
        ;;
    esac
  fi
}

# Call main function
main $1
